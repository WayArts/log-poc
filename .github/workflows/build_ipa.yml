name: iOS-ipa-build

on:
  workflow_dispatch:

jobs:
  build-ios:
    name: ðŸŽ‰ iOS Build
    runs-on: macos-latest
    
    env:
      WORKING_DIR: log_poc

    steps:
      - name: check Xcode version
        run: /usr/bin/xcodebuild -version
        
      - name: checkout repository
        uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      - name: flutter pub get
        run: flutter pub get
        working-directory: ${{ env.WORKING_DIR }}

      - run: pod repo update
        working-directory: ${{ env.WORKING_DIR }}\ios

      - name: Install the Apple certificate and provisioning profile
        env:
          P12_CERTIFICATE: ${{ secrets.P12_CERTIFICATE }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          PROVISIONING_PROFILE: ${{ secrets.PROVISIONING_PROFILE }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$P12_CERTIFICATE" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$PROVISIONING_PROFILE" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles   

      - name: Build iOS app
        run: flutter build ios --release
        working-directory: ${{ env.WORKING_DIR }}

      - name: Resolve Swift dependencies
        run: xcodebuild -resolvePackageDependencies -workspace ios/Runner.xcworkspace -scheme Runner -configuration Release
        working-directory: ${{ env.WORKING_DIR }}

      - name: Archive app
        run: |
          xcodebuild -workspace ios/Runner.xcworkspace \
                     -scheme Runner \
                     -configuration Release \
                     -sdk iphoneos \
                     -archivePath build/ios/archive/Runner.xcarchive \
                     archive
        working-directory: ${{ env.WORKING_DIR }}

      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
                     -archivePath build/ios/archive/Runner.xcarchive \
                     -exportPath build/ios/ipa \
                     -exportOptionsPlist ios/ExportOptions.plist
        working-directory: ${{ env.WORKING_DIR }}

      - name: Upload IPA to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/ios/ipa/log_poc.ipa
          tag: v${{ vars.MAJOR_VERSION }}.${{ vars.MINOR_VERSION }}.${{ vars.PATCH_VERSION }}
          overwrite: true
          body: "Test release"

      # - name: Create archive
      #   run: |
      #     tar -czvf archive.tar.gz .

      # - name: Upload archive
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: repository-archive
      #     path: archive2.tar.gz
